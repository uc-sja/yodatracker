// Generated by data binding compiler. Do not edit!
package com.test.locationupdates.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.test.locationupdates.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final TextView dbTitle;

  @NonNull
  public final TextView dbUploads;

  @NonNull
  public final TextView lastLocation;

  @NonNull
  public final TextView lastTitle;

  @NonNull
  public final TextView lastUpdated;

  @NonNull
  public final ConstraintLayout parentContainer;

  @NonNull
  public final Button startUpdates;

  @NonNull
  public final LinearLayout statsContainer;

  @NonNull
  public final Button stopUpdates;

  @NonNull
  public final TextView updteTitle;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView dbTitle, TextView dbUploads, TextView lastLocation, TextView lastTitle,
      TextView lastUpdated, ConstraintLayout parentContainer, Button startUpdates,
      LinearLayout statsContainer, Button stopUpdates, TextView updteTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.dbTitle = dbTitle;
    this.dbUploads = dbUploads;
    this.lastLocation = lastLocation;
    this.lastTitle = lastTitle;
    this.lastUpdated = lastUpdated;
    this.parentContainer = parentContainer;
    this.startUpdates = startUpdates;
    this.statsContainer = statsContainer;
    this.stopUpdates = stopUpdates;
    this.updteTitle = updteTitle;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
